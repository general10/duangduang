import datetime
import tkinter.simpledialog as dl       #建立简单的对话框
import tkinter.messagebox as mb        #信息显示的信息框

from tkinter import *

# tkinter GUI Input Output Example
# 设置GUI
root = dl.Tk()  #Tk()是tkinter自带的构造函数，我们创建一个主函数的显示框
w = dl.Label(root, text="Label Title") #创建一个标签，标签有两个参数，第一基本的主函数框，第二标签的标题
w.pack()    #自动调节标签的大小来适应字数


# 欢迎消息
mb.showinfo("Welcome", "Welcome Message")   #showinfo用来给用户展示一些信息的窗口，通常用于开始的界面
guess = dl.askinteger("Number", "Enter a number")  #askinteger提供一个要求用户数输入的对话框，然后赋值给guess

output = 'This is output message'
mb.showinfo("Output: ", output + str(guess))   #利用showinfo输出想要输出的信息

# from tkinter import *
#
# top=Tk()
# top.wm_title("菜单")
# top.geometry("400x300+300+100")
#
# # 创建一个菜单项，类似于导航栏
# menubar=Menu(top)
#
# # 创建菜单项
# fmenu1=Menu(top)
# for item in ['新建','打开','保存','另存为']:
#     # 如果该菜单时顶层菜单的一个菜单项，则它添加的是下拉菜单的菜单项。
#     fmenu1.add_command(label=item)
#
# fmenu2=Menu(top)
# for item in ['复制','粘贴','剪切']:
#     fmenu2.add_command(label=item)
#
# fmenu3=Menu(top)
# for item in ['默认视图','新式视图']:
#     fmenu3.add_command(label=item)
#
# fmenu4=Menu(top)
# for item in ["版权信息","其他说明"]:
#     fmenu4.add_command(label=item)
#
# # add_cascade 的一个很重要的属性就是 menu 属性，它指明了要把那个菜单级联到该菜单项上，
# # 当然，还必不可少的就是 label 属性，用于指定该菜单项的名称
# menubar.add_cascade(label="文件",menu=fmenu1)
# menubar.add_cascade(label="编辑",menu=fmenu2)
# menubar.add_cascade(label="视图",menu=fmenu3)
# menubar.add_cascade(label="关于",menu=fmenu4)
#
# # 最后可以用窗口的 menu 属性指定我们使用哪一个作为它的顶层菜单
# top['menu']=menubar
# top.mainloop()
# from tkinter import messagebox
#
# class MainWindow:
#     def buttonListener1(self, event):#创建事件，调用另外一个函数的功能，生成表格
#         agent_no=self.text_agentno.get(1.0, END)#获取text_agentno文本框里的值
#         stime = self.text_stime.get(1.0, END)
#         etime = self.text_etime.get(1.0, END)
#         #get_oracle_date()就是自己封装好的自动生成入账记录的函数，这里调用这个函数就可以
#         #get_oracle_data(agent_no,stime,etime)
#         messagebox.showinfo("messagebox", "云+入账对账记录表格已自动生成")
#
#     def buttonListener2(self, event):#创建第二个事件，退出程序
#         exit()
#
#     def __init__(self):
#         #创建Frame
#         self.frame = Tk()
#         # 设置Frame这个矩形区域的标题
#         self.frame.title('欢迎使用，请输入信息：')
#         #向frame中添加3个label
#         self.label_agentno =
#         Label(self.frame, text="商户编号:",fg="blue",font="Verdana 10 bold")
#         self.label_stime =
#         Label(self.frame, text="开始时间:",fg="blue",font="Verdana 10 bold")
#         self.label_etime =
#         Label(self.frame, text="结束时间:",fg="blue",font="Verdana 10 bold")
#
#         self.text_agentno = Text(self.frame, height="1", width=30)
#         #商户编号设置默认值为20000xxxxxxx
#         self.text_agentno.insert(1.0,'20000xxxxxxx')
#         self.text_stime = Text(self.frame, height="1", width=30)
#         now_time=datetime.datetime.now()
#         yes_time=now_time+datetime.timedelta(days=-1)
#         #开始时间设置默认值为前一天年月日0时0分0秒
#         self.text_stime.insert(1.0,yes_time.strftime("%Y-%m-%d")+" 00:00:00")
#         self.text_etime = Text(self.frame, height="1", width=30)
#         #结束时间设置默认值为当前时间年月日0时0分0秒
#         self.text_etime.insert(1.0,now_time.strftime("%Y-%m-%d")+" 00:00:00")
#
#         #使用grid来布局组件，指定组件放置在什么位置
#         self.label_agentno.grid(row=0, column=0)
#         self.label_stime.grid(row=1, column=0)
#         self.label_etime.grid(row=2, column=0)
#
#         self.button_ok = Button(self.frame, text="ok", width=10)
#         self.button_cancel = Button(self.frame, text="cancel", width=10)
#
#         #使用grid设置各个label位置
#         self.text_agentno.grid(row=0, column=1)
#         self.text_stime.grid(row=1, column=1)
#         self.text_etime.grid(row=2, column=1)
#
#         self.button_ok.grid(row=3, column=0)
#         self.button_cancel.grid(row=3, column=1)
#
#         self.button_ok.bind("<Button-1>",self.buttonListener1)
#         #绑定事件—点击OK键，tkinter自动捕获并触发buttonListener1事件，生成表格
#
#         self.button_cancel.bind("<Button-1>",self.buttonListener2)
#         #绑定事件—点击取消键，tkinter自动捕获并触发buttonListener2事件，退出程序
#         self.frame.mainloop()
#
# frame = MainWindow()